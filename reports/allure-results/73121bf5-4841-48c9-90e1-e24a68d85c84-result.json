{"name": "test", "status": "broken", "statusDetails": {"message": "OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.", "trace": "@pytest.mark.ui\n    def test():\n        base = BaseTest(\"user1\",incognito=True)\n        driver = base.driver\n        actions = base.actions\n        recorder=ScreenRecorder()\n        try:\n            recorder.start()\n            Interactions.wait_and_click(driver, By.XPATH, \"//div[@aria-label='Modules']\")\n    # Clicking navigation: Product information management\n            nav1 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Product information management']\")\n    # Clicking navigation: Products\n            nav2 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Products']\")\n    # Clicking navigation: All products and product masters\n            base.steps_count +=1\n            nav3 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='All products and product masters']\")\n            time.sleep(3)\n            Interactions.assert_navigation(driver, base.steps_count, nav1, nav2, nav3)\n    # Inputting into: QuickFilterControl\n            base.steps_count +=1\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@name,'QuickFilterControl')]\")):\n                locator=Interactions.get_locator(driver, By.XPATH, \"//input[contains(@name,'QuickFilterControl')]\")\n                Interactions.clear_input_field_and_send_keys(driver, By.XPATH, locator, \"0007\",base.steps_count,\"Use the Quick Filter to find records. For example, filter on the Product number field with a value of '0007'.\")\n                Interactions.press_enter(driver, By.XPATH, locator)\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@aria-label,'')]\")):\n                locator=Interactions.get_locator(driver, By.XPATH, \"//input[contains(@aria-label,'')]\")\n                Interactions.clear_input_field_and_send_keys(driver, By.XPATH, locator, \"0007\",base.steps_count,\"Use the Quick Filter to find records. For example, filter on the Product number field with a value of '0007'.\")\n                Interactions.press_enter(driver, By.XPATH, locator)\n            Interactions.validation(\"Product number\", \"0007\", base.steps_count, \"Validate that the value for Product number is '0007'.\")\n            base.steps_count +=1\n    # Inputting into: Identification_DisplayProductNumber\n            if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@name,'Identification_DisplayProductNumber')]\") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@aria-label,'Product number')]\") ):\n                #clicking inside grid: Identification_DisplayProductNumber\n                if(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@name,'Identification_DisplayProductNumber')])[1]\")):\n                    actions.move_to_element(driver.find_element(By.XPATH,\"//input[contains(@name,'Identification_DisplayProductNumber')]\")).perform()\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@name,'Identification_DisplayProductNumber')])[1]\", \"0007\",base.steps_count,\"Validate that the value for Product number is '0007'.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@aria-label,'Product number')])[1]\")):\n                    actions.move_to_element(driver.find_element(By.XPATH, \"//input[contains(@aria-label,'Product number')]\")).perform()\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@aria-label,'Product number')])[1]\", \"0007\",base.steps_count,\"Validate that the value for Product number is '0007'.\")\n            else:\n                if(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@name,'Identification_DisplayProductNumber')]\")):\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@name,'Identification_DisplayProductNumber')]\", \"0007\",base.steps_count,\"Validate that the value for Product number is '0007'.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@aria-label,'Product number')]\")):\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@aria-label,'Product number')]\", \"0007\",base.steps_count,\"Validate that the value for Product number is '0007'.\")\n            Interactions.press_enter(driver, By.XPATH, \"//body\")\n            base.steps_count +=1\n    # Clicking button: ListPageGrid\n            user_input = input(\"Press data to select: \")\n            Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']\", base.steps_count,\"In the list, click the link in the selected row.\")\n            Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n            Interactions.validation(\"Title\", \"0007 : Full Finger BMX Gloves\", base.steps_count, \"Validate that the value for Title is '0007 : Full Finger BMX Gloves'.\")\n            base.steps_count +=1\n    # Inputting into: StringTitle\n            if(Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@name,'StringTitle')]\") or Interactions.check_input_ancestor_is_table(driver, By.XPATH, \"//input[contains(@aria-label,'Title')]\") ):\n                #clicking inside grid: StringTitle\n                if(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@name,'StringTitle')])[1]\")):\n                    actions.move_to_element(driver.find_element(By.XPATH,\"//input[contains(@name,'StringTitle')]\")).perform()\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@name,'StringTitle')])[1]\", \"0007 : Full Finger BMX Gloves\",base.steps_count,\"Validate that the value for Title is '0007 : Full Finger BMX Gloves'.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"(//input[contains(@aria-label,'Title')])[1]\")):\n                    actions.move_to_element(driver.find_element(By.XPATH, \"//input[contains(@aria-label,'Title')]\")).perform()\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"(//input[contains(@aria-label,'Title')])[1]\", \"0007 : Full Finger BMX Gloves\",base.steps_count,\"Validate that the value for Title is '0007 : Full Finger BMX Gloves'.\")\n            else:\n                if(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@name,'StringTitle')]\")):\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@name,'StringTitle')]\", \"0007 : Full Finger BMX Gloves\",base.steps_count,\"Validate that the value for Title is '0007 : Full Finger BMX Gloves'.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"//input[contains(@aria-label,'Title')]\")):\n                    Interactions.clear_input_field_and_send_keys(driver, By.XPATH, \"//input[contains(@aria-label,'Title')]\", \"0007 : Full Finger BMX Gloves\",base.steps_count,\"Validate that the value for Title is '0007 : Full Finger BMX Gloves'.\")\n            Interactions.press_enter(driver, By.XPATH, \"//body\")\n    # Closing the page\n            base.steps_count +=1\n            Interactions.click_back_button(driver, By.XPATH, \"//button[@data-dyn-controlname='SystemDefinedCloseButton']\", base.steps_count)\n            time.sleep(1)\n    # Closing the page\n            base.steps_count +=1\n            Interactions.click_back_button(driver, By.XPATH, \"//button[@data-dyn-controlname='SystemDefinedCloseButton']\", base.steps_count)\n            time.sleep(1)\n            assert True\n        except Exception as e:\n            base.test_passed = False\n>           raise e\n\ntests\\script_Validation for RSAT 6_test.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\script_Validation for RSAT 6_test.py:57: in test\n    user_input = input(\"Press data to select: \")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <_pytest.capture.DontReadFromInput object at 0x0000023FFD9FB1D0>, size = -1\n\n    def read(self, size: int = -1) -> str:\n>       raise OSError(\n            \"pytest: reading from stdin while output is captured!  Consider using `-s`.\"\n        )\nE       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.\n\n..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\_pytest\\capture.py:229: OSError"}, "attachments": [{"name": "stdout", "source": "ab1c95a8-e6ee-4085-a426-5261f15dfb39-attachment.txt", "type": "text/plain"}], "start": 1752578350994, "stop": 1752578412071, "uuid": "3763a664-2394-4a11-b8a1-70af3d852cba", "historyId": "2e95af76cf6ee3925528151f513051ef", "testCaseId": "2e95af76cf6ee3925528151f513051ef", "fullName": "tests.script_Validation for RSAT 6_test#test", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "script_Validation for RSAT 6_test"}, {"name": "host", "value": "PSDLAP373"}, {"name": "thread", "value": "21364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.script_Validation for RSAT 6_test"}]}