{"name": "test", "status": "broken", "statusDetails": {"message": "OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.", "trace": "@pytest.mark.ui\n    def test():\n        base = BaseTest(\"user1\",incognito=True)\n        driver = base.driver\n        actions = base.actions\n        recorder=ScreenRecorder()\n        try:\n            recorder.start()\n            Interactions.wait_and_click(driver, By.XPATH, \"//div[@aria-label='Modules']\")\n    # Clicking navigation: Procurement and sourcing\n            nav1 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Procurement and sourcing']\")\n    # Clicking navigation: Purchase orders\n            nav2 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Purchase orders']\")\n    # Clicking navigation: All purchase orders\n            nav3 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='All purchase orders']\")\n            time.sleep(3)\n            base.steps_count +=1\n            Interactions.assert_navigation(driver, base.steps_count, nav1, nav2, nav3)\n            base.steps_count +=1\n    # Clicking filter manager: SystemDefinedFilterManager\n            column_to_open = \"Purchase order\"\n            open_divs = driver.find_elements(By.XPATH, \"//div/parent::div[contains(@class, 'dyn-headerCell')]\")\n            filter_manager_cloumn_last_opened = ''\n            for i, div in enumerate(open_divs, start=1):\n                class_attr = div.get_attribute('class')\n                if 'hasOpenPopup' in class_attr:\n                    filter_manager_cloumn_last_opened = Interactions.get_element_text(driver, By.XPATH, f\"(//div/parent::div[contains(@class, 'dyn-headerCell')])[1]\")\n                    break\n            if filter_manager_cloumn_last_opened == 'Purchase order' and filter_manager_cloumn_last_opened != '':\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\")\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\", base.steps_count,\"Open Purchase order column filter.\")\n            else:\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\", base.steps_count,\"Open Purchase order column filter.\")\n            base.steps_count +=1\n            filter_manager_data = Interactions.extract_value_and_operator_from_description(\"Enter a filter value of '00000823' on the 'Purchase order' field using the 'is exactly' filter operator.\")\n            operator = filter_manager_data['operator']\n            new_val = filter_manager_data['value']\n            field_name = filter_manager_data['field_name']\n            drop_down_item = \"//input[contains(@aria-label,'Filter field: \"+field_name+\",')]/ancestor::div[@class='columnHeader-popup sysPopup']/ancestor::body/child::div[@class='sysPopup flyoutButton-flyOut layout-root-scope']//button//span[text()='\"+operator+\"']\"\n            input_field = \"//input[contains(@aria-label,'Filter field: \"+field_name+\",')]\"\n            apply_button = \"//input[contains(@aria-label,'Filter field: \"+field_name+\", operator: ')]//ancestor::div/child::div[@class='columnHeaderPopup-buttons']//span[text()='Apply']/ancestor::button\"\n            dropDown_button = \"//span[contains(@class,'button-label-dropDown')]/ancestor::button[contains(@class,'dynamicsButton')][ancestor::div[@class='filterFieldContainer']//input[contains(@aria-label,'Filter field: \"+field_name+\"')]]\"\n            Interactions.wait_and_click(driver, By.XPATH, dropDown_button)\n            Interactions.wait_and_click(driver, By.XPATH, drop_down_item)\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//div[contains(@class,'popupShadow popupView preview')]\")):\n                other_element = driver.find_element(By.XPATH, \"//div[text()='\" + field_name + \"']\")\n                actions.move_to_element(other_element).perform()\n            if operator == 'is one of' or operator == 'matches':\n                new_val = Interactions.extract_multiple_values(new_val)\n                for new_val_value in new_val:\n                    Interactions.wait_and_send_keys(driver, By.XPATH, input_field, new_val_value)\n                    Interactions.wait_and_click(driver, By.XPATH, apply_button)\n            elif operator == 'between':\n                new_val = Interactions.extract_dates(new_val)\n                from_date_locator = \"(//input[contains(@aria-label,'Filter field: \" + field_name + \",')])[1]\"\n                to_date_locator = \"(//input[contains(@aria-label,'Filter field: \" + field_name + \",')])[2]\"\n                Interactions.wait_and_send_keys(driver, By.XPATH, from_date_locator, new_val[0])\n                Interactions.wait_and_send_keys(driver, By.XPATH, to_date_locator, new_val[1])\n            else:\n                Interactions.wait_and_send_keys(driver, By.XPATH, input_field, new_val)\n            Interactions.wait_and_click(driver, By.XPATH, apply_button, base.steps_count,\"Enter a filter value of '00000823' on the 'Purchase order' field using the 'is exactly' filter operator.\")\n            base.steps_count +=1\n    # Clicking button: Grid\n            user_input = input(\"Press data to select: \")\n            Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']\", base.steps_count,\"In the list, click the link in the selected row.\")\n            Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n            base.steps_count +=1\n    # Clicking (default) on: PurchOrder\n            time.sleep(3)\n            Interactions.wait_and_click(driver, By.XPATH, \"//button/parent::div[@data-dyn-controlname='PurchOrder']\",base.steps_count,\"On the Action Pane, click Purchase order.\")\n            base.steps_count +=1\n    # Clicking (default) on: General\n            time.sleep(3)\n            Interactions.wait_and_click(driver, By.XPATH, \"//button/parent::div[@data-dyn-controlname='General']\",base.steps_count,\"On the Action Pane, click General.\")\n            base.steps_count +=1\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='OrderReferences']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='OrderReferences']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@aria-label='Related orders']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@aria-label='Related orders']\",base.steps_count,\"Click Related orders.\")\n            else:\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[@data-dyn-controlname='ActionPane']//div[@class='appBar-toolbar']//div[@data-dyn-role='OverflowButton']\")\n                if(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OrderReferences']\")):\n                    Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Related orders']\")):\n                    Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Related orders']\",base.steps_count,\"Click Related orders.\")\n            base.steps_count +=1\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//buttn[@name='OkButton']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OkButton']\",base.steps_count, \"Click OK.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//buttn[@data-dyn-controlname='OkButton']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OkButton']\",base.steps_count,\"Click OK.\")\n    # Closing the page\n            base.steps_count +=1\n            Interactions.click_back_button(driver, By.XPATH, \"//buttn[@data-dyn-controlname='SystemDefinedCloseButton']\", base.steps_count)\n            time.sleep(1)\n            assert True\n        except Exception as e:\n            base.test_passed = False\n>           raise e\n\ntests\\script_data_test_2_test.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\script_data_test_2_test.py:73: in test\n    user_input = input(\"Press data to select: \")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <_pytest.capture.DontReadFromInput object at 0x00000233E0498AA0>, size = -1\n\n    def read(self, size: int = -1) -> str:\n>       raise OSError(\n            \"pytest: reading from stdin while output is captured!  Consider using `-s`.\"\n        )\nE       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.\n\n..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\_pytest\\capture.py:229: OSError"}, "attachments": [{"name": "stdout", "source": "4905d9d1-bf34-44ac-ad6b-73f67a688572-attachment.txt", "type": "text/plain"}], "start": 1753106253040, "stop": 1753106314110, "uuid": "13693c3c-e489-45ad-8098-790ee90db677", "historyId": "9f6b20f525fdef544e0358000b9570ec", "testCaseId": "9f6b20f525fdef544e0358000b9570ec", "fullName": "tests.script_data_test_2_test#test", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "script_data_test_2_test"}, {"name": "host", "value": "PSDLAP373"}, {"name": "thread", "value": "23592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.script_data_test_2_test"}]}