{"name": "test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6b765e925+77845]\n\tGetHandleVerifier [0x0x7ff6b765e980+77936]\n\t(No symbol) [0x0x7ff6b7419cda]\n\t(No symbol) [0x0x7ff6b74706aa]\n\t(No symbol) [0x0x7ff6b747095c]\n\t(No symbol) [0x0x7ff6b74c3d07]\n\t(No symbol) [0x0x7ff6b749890f]\n\t(No symbol) [0x0x7ff6b74c0b07]\n\t(No symbol) [0x0x7ff6b74986a3]\n\t(No symbol) [0x0x7ff6b7461791]\n\t(No symbol) [0x0x7ff6b7462523]\n\tGetHandleVerifier [0x0x7ff6b793683d+3059501]\n\tGetHandleVerifier [0x0x7ff6b7930bfd+3035885]\n\tGetHandleVerifier [0x0x7ff6b79503f0+3164896]\n\tGetHandleVerifier [0x0x7ff6b7678c2e+185118]\n\tGetHandleVerifier [0x0x7ff6b768053f+216111]\n\tGetHandleVerifier [0x0x7ff6b76672d4+113092]\n\tGetHandleVerifier [0x0x7ff6b7667489+113529]\n\tGetHandleVerifier [0x0x7ff6b764e288+10616]\n\tBaseThreadInitThunk [0x0x7ffbe42ee8d7+23]\n\tRtlUserThreadStart [0x0x7ffbe5ebc34c+44]", "trace": "@pytest.mark.ui\n    def test():\n        base = BaseTest(\"user1\",incognito=True)\n        driver = base.driver\n        actions = base.actions\n        recorder=ScreenRecorder()\n        try:\n            recorder.start()\n            Interactions.wait_and_click(driver, By.XPATH, \"//div[@aria-label='Modules']\")\n    # Clicking navigation: Procurement and sourcing\n            nav1 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Procurement and sourcing']\")\n    # Clicking navigation: Purchase orders\n            nav2 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='Purchase orders']\")\n    # Clicking navigation: All purchase orders\n            nav3 = Interactions.click_nav(driver, By.XPATH, \"//a[@data-dyn-title='All purchase orders']\")\n            time.sleep(3)\n            base.steps_count +=1\n            Interactions.assert_navigation(driver, base.steps_count, nav1, nav2, nav3)\n            base.steps_count +=1\n    # Clicking filter manager: SystemDefinedFilterManager\n            column_to_open = \"Purchase order\"\n            open_divs = driver.find_elements(By.XPATH, \"//div/parent::div[contains(@class, 'dyn-headerCell')]\")\n            filter_manager_cloumn_last_opened = ''\n            for i, div in enumerate(open_divs, start=1):\n                class_attr = div.get_attribute('class')\n                if 'hasOpenPopup' in class_attr:\n                    filter_manager_cloumn_last_opened = Interactions.get_element_text(driver, By.XPATH, f\"(//div/parent::div[contains(@class, 'dyn-headerCell')])[1]\")\n                    break\n            if filter_manager_cloumn_last_opened == 'Purchase order' and filter_manager_cloumn_last_opened != '':\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\")\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\", base.steps_count,\"Open Purchase order column filter.\")\n            else:\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[text()='Purchase order']\", base.steps_count,\"Open Purchase order column filter.\")\n            base.steps_count +=1\n            filter_manager_data = Interactions.extract_value_and_operator_from_description(\"Enter a filter value of '00000823' on the 'Purchase order' field using the 'is exactly' filter operator.\")\n            operator = filter_manager_data['operator']\n            new_val = filter_manager_data['value']\n            field_name = filter_manager_data['field_name']\n            drop_down_item = \"//input[contains(@aria-label,'Filter field: \"+field_name+\",')]/ancestor::div[@class='columnHeader-popup sysPopup']/ancestor::body/child::div[@class='sysPopup flyoutButton-flyOut layout-root-scope']//button//span[text()='\"+operator+\"']\"\n            input_field = \"//input[contains(@aria-label,'Filter field: \"+field_name+\",')]\"\n            apply_button = \"//input[contains(@aria-label,'Filter field: \"+field_name+\", operator: ')]//ancestor::div/child::div[@class='columnHeaderPopup-buttons']//span[text()='Apply']/ancestor::button\"\n            dropDown_button = \"//span[contains(@class,'button-label-dropDown')]/ancestor::button[contains(@class,'dynamicsButton')][ancestor::div[@class='filterFieldContainer']//input[contains(@aria-label,'Filter field: \"+field_name+\"')]]\"\n            Interactions.wait_and_click(driver, By.XPATH, dropDown_button)\n            Interactions.wait_and_click(driver, By.XPATH, drop_down_item)\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//div[contains(@class,'popupShadow popupView preview')]\")):\n                other_element = driver.find_element(By.XPATH, \"//div[text()='\" + field_name + \"']\")\n                actions.move_to_element(other_element).perform()\n            if operator == 'is one of' or operator == 'matches':\n                new_val = Interactions.extract_multiple_values(new_val)\n                for new_val_value in new_val:\n                    Interactions.wait_and_send_keys(driver, By.XPATH, input_field, new_val_value)\n                    Interactions.wait_and_click(driver, By.XPATH, apply_button)\n            elif operator == 'between':\n                new_val = Interactions.extract_dates(new_val)\n                from_date_locator = \"(//input[contains(@aria-label,'Filter field: \" + field_name + \",')])[1]\"\n                to_date_locator = \"(//input[contains(@aria-label,'Filter field: \" + field_name + \",')])[2]\"\n                Interactions.wait_and_send_keys(driver, By.XPATH, from_date_locator, new_val[0])\n                Interactions.wait_and_send_keys(driver, By.XPATH, to_date_locator, new_val[1])\n            else:\n                Interactions.wait_and_send_keys(driver, By.XPATH, input_field, new_val)\n            Interactions.wait_and_click(driver, By.XPATH, apply_button, base.steps_count,\"Enter a filter value of '00000823' on the 'Purchase order' field using the 'is exactly' filter operator.\")\n            base.steps_count +=1\n    # Clicking button: Grid\n            user_input = \"00001442\"\n            Interactions.scroll_and_click_row(driver, By.XPATH, \"//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']\", f\"//input[@value='{user_input}']\", base.steps_count,\"In the list, click the link in the selected row.\")\n            Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\n            base.steps_count +=1\n    # Clicking (default) on: PurchOrder\n            time.sleep(3)\n            Interactions.wait_and_click(driver, By.XPATH, \"//button/parent::div[@data-dyn-controlname='PurchOrder']\",base.steps_count,\"On the Action Pane, click Purchase order.\")\n            base.steps_count +=1\n    # Clicking (default) on: General\n            time.sleep(3)\n            Interactions.wait_and_click(driver, By.XPATH, \"//button/parent::div[@data-dyn-controlname='General']\",base.steps_count,\"On the Action Pane, click General.\")\n            base.steps_count +=1\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//button[@name='OrderReferences']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@data-dyn-controlname='OrderReferences']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//button[@aria-label='Related orders']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@aria-label='Related orders']\",base.steps_count,\"Click Related orders.\")\n            else:\n                Interactions.wait_and_click(driver, By.XPATH, \"//div[@data-dyn-controlname='ActionPane']//div[@class='appBar-toolbar']//div[@data-dyn-role='OverflowButton']\")\n                if(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OrderReferences']\")):\n                    Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@name='OrderReferences']\",base.steps_count,\"Click Related orders.\")\n                elif(Interactions.check_element_exist(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Related orders']\")):\n                    Interactions.wait_and_click(driver, By.XPATH, \"//div[@class='overflow-menu sysPopup allowFlyoutClickPropagation']//button[@aria-label='Related orders']\",base.steps_count,\"Click Related orders.\")\n            base.steps_count +=1\n            if(Interactions.check_element_exist(driver, By.XPATH, \"//buttn[@name='OkButton']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@name='OkButton']\",base.steps_count, \"Click OK.\")\n            elif(Interactions.check_element_exist(driver, By.XPATH, \"//buttn[@data-dyn-controlname='OkButton']\")):\n                Interactions.wait_and_click(driver, By.XPATH, \"//button[@data-dyn-controlname='OkButton']\",base.steps_count,\"Click OK.\")\n    # Closing the page\n            base.steps_count +=1\n            Interactions.click_back_button(driver, By.XPATH, \"//buttn[@data-dyn-controlname='SystemDefinedCloseButton']\", base.steps_count)\n            time.sleep(1)\n            assert True\n        except Exception as e:\n            base.test_passed = False\n>           raise e\n\ntests\\script_data_test_2_test.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\script_data_test_2_test.py:75: in test\n    Interactions.press_enter(driver, By.XPATH, \"//input[@value='\"+user_input+\"']\")\nUtils\\Interactions.py:324: in press_enter\n    element = WebDriverWait(driver, timeout).until(EC.element_to_be_clickable((by, value)))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"38dd099cf56c93d4444f7e79d7c1233f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002A021E025C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6b765e925+77845]\nE       \tGetHandleVerifier [0x0x7ff6b765e980+77936]\nE       \t(No symbol) [0x0x7ff6b7419cda]\nE       \t(No symbol) [0x0x7ff6b74706aa]\nE       \t(No symbol) [0x0x7ff6b747095c]\nE       \t(No symbol) [0x0x7ff6b74c3d07]\nE       \t(No symbol) [0x0x7ff6b749890f]\nE       \t(No symbol) [0x0x7ff6b74c0b07]\nE       \t(No symbol) [0x0x7ff6b74986a3]\nE       \t(No symbol) [0x0x7ff6b7461791]\nE       \t(No symbol) [0x0x7ff6b7462523]\nE       \tGetHandleVerifier [0x0x7ff6b793683d+3059501]\nE       \tGetHandleVerifier [0x0x7ff6b7930bfd+3035885]\nE       \tGetHandleVerifier [0x0x7ff6b79503f0+3164896]\nE       \tGetHandleVerifier [0x0x7ff6b7678c2e+185118]\nE       \tGetHandleVerifier [0x0x7ff6b768053f+216111]\nE       \tGetHandleVerifier [0x0x7ff6b76672d4+113092]\nE       \tGetHandleVerifier [0x0x7ff6b7667489+113529]\nE       \tGetHandleVerifier [0x0x7ff6b764e288+10616]\nE       \tBaseThreadInitThunk [0x0x7ffbe42ee8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffbe5ebc34c+44]\n\n..\\..\\..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "stdout", "source": "49f18915-84be-4ec9-b723-85f7e1bcb64d-attachment.txt", "type": "text/plain"}], "start": 1753107132323, "stop": 1753107246629, "uuid": "ddfd2b41-3229-404a-a4f1-b657f2c9ebd9", "historyId": "9f6b20f525fdef544e0358000b9570ec", "testCaseId": "9f6b20f525fdef544e0358000b9570ec", "fullName": "tests.script_data_test_2_test#test", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "script_data_test_2_test"}, {"name": "host", "value": "PSDLAP373"}, {"name": "thread", "value": "8316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.script_data_test_2_test"}]}