<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="1" time="99.629" timestamp="2025-07-21T19:52:19.888654+05:30" hostname="PSDLAP373"><testcase classname="tests.script_PO_scroll_test" name="test" time="98.910"><failure message="selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;&#09;GetHandleVerifier [0x0x7ff6b765e925+77845]&#10;&#09;GetHandleVerifier [0x0x7ff6b765e980+77936]&#10;&#09;(No symbol) [0x0x7ff6b7419cda]&#10;&#09;(No symbol) [0x0x7ff6b74706aa]&#10;&#09;(No symbol) [0x0x7ff6b747095c]&#10;&#09;(No symbol) [0x0x7ff6b74c3d07]&#10;&#09;(No symbol) [0x0x7ff6b749890f]&#10;&#09;(No symbol) [0x0x7ff6b74c0b07]&#10;&#09;(No symbol) [0x0x7ff6b74986a3]&#10;&#09;(No symbol) [0x0x7ff6b7461791]&#10;&#09;(No symbol) [0x0x7ff6b7462523]&#10;&#09;GetHandleVerifier [0x0x7ff6b793683d+3059501]&#10;&#09;GetHandleVerifier [0x0x7ff6b7930bfd+3035885]&#10;&#09;GetHandleVerifier [0x0x7ff6b79503f0+3164896]&#10;&#09;GetHandleVerifier [0x0x7ff6b7678c2e+185118]&#10;&#09;GetHandleVerifier [0x0x7ff6b768053f+216111]&#10;&#09;GetHandleVerifier [0x0x7ff6b76672d4+113092]&#10;&#09;GetHandleVerifier [0x0x7ff6b7667489+113529]&#10;&#09;GetHandleVerifier [0x0x7ff6b764e288+10616]&#10;&#09;BaseThreadInitThunk [0x0x7ffbe42ee8d7+23]&#10;&#09;RtlUserThreadStart [0x0x7ffbe5ebc34c+44]">@pytest.mark.ui
    def test():
        base = BaseTest("user1",incognito=True)
        driver = base.driver
        actions = base.actions
        recorder=ScreenRecorder()
        try:
            recorder.start()
            Interactions.wait_and_click(driver, By.XPATH, "//div[@aria-label='Modules']")
    # Clicking navigation: Accounts payable
            nav1 = Interactions.click_nav(driver, By.XPATH, "//a[@data-dyn-title='Accounts payable']")
    # Clicking navigation: Purchase orders
            nav2 = Interactions.click_nav(driver, By.XPATH, "//a[@data-dyn-title='Purchase orders']")
    # Clicking navigation: All purchase orders
            nav3 = Interactions.click_nav(driver, By.XPATH, "//a[@data-dyn-title='All purchase orders']")
            time.sleep(3)
            base.steps_count +=1
            Interactions.assert_navigation(driver, base.steps_count, nav1, nav2, nav3)
            base.steps_count +=1
            user_input = "00001442"
            Interactions.scroll_and_click_row(driver, By.XPATH, "//div[contains(@class,'fixedDataTableRowLayout_')]/ancestor::div[@role='grid']", f"//input[@value='{user_input}']/ancestor::div[@class='fixedDataTableRowLayout_body']/div[1]//div[@role='checkbox']", base.steps_count,"In the list, find and select the desired record.")
            base.steps_count +=1
            Interactions.press_enter(driver, By.XPATH, "//input[@value='"+user_input+"']")
            base.steps_count +=1
    # Clicking (default) on: PurchOrder
            time.sleep(3)
            Interactions.wait_and_click(driver, By.XPATH, "//button/parent::div[@data-dyn-controlname='PurchOrder']",base.steps_count,"On the Action Pane, click Purchase order.")
            assert True
        except Exception as e:
            base.test_passed = False
&gt;           raise e

tests\script_PO_scroll_test.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\script_PO_scroll_test.py:32: in test
    Interactions.press_enter(driver, By.XPATH, "//input[@value='"+user_input+"']")
Utils\Interactions.py:324: in press_enter
    element = WebDriverWait(driver, timeout).until(EC.element_to_be_clickable((by, value)))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="bcbb3088b86364165a8936ade2eca57a")&gt;
method = &lt;function element_to_be_clickable.&lt;locals&gt;._predicate at 0x000002071ED9EA20&gt;, message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -&gt; T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        &gt;&gt;&gt; from selenium.webdriver.common.by import By
        &gt;&gt;&gt; from selenium.webdriver.support.ui import WebDriverWait
        &gt;&gt;&gt; from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        &gt;&gt;&gt; wait = WebDriverWait(driver, 10)
        &gt;&gt;&gt; element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        &gt;&gt;&gt; print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() &gt; end_time:
                break
            time.sleep(self._poll)
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       	GetHandleVerifier [0x0x7ff6b765e925+77845]
E       	GetHandleVerifier [0x0x7ff6b765e980+77936]
E       	(No symbol) [0x0x7ff6b7419cda]
E       	(No symbol) [0x0x7ff6b74706aa]
E       	(No symbol) [0x0x7ff6b747095c]
E       	(No symbol) [0x0x7ff6b74c3d07]
E       	(No symbol) [0x0x7ff6b749890f]
E       	(No symbol) [0x0x7ff6b74c0b07]
E       	(No symbol) [0x0x7ff6b74986a3]
E       	(No symbol) [0x0x7ff6b7461791]
E       	(No symbol) [0x0x7ff6b7462523]
E       	GetHandleVerifier [0x0x7ff6b793683d+3059501]
E       	GetHandleVerifier [0x0x7ff6b7930bfd+3035885]
E       	GetHandleVerifier [0x0x7ff6b79503f0+3164896]
E       	GetHandleVerifier [0x0x7ff6b7678c2e+185118]
E       	GetHandleVerifier [0x0x7ff6b768053f+216111]
E       	GetHandleVerifier [0x0x7ff6b76672d4+113092]
E       	GetHandleVerifier [0x0x7ff6b7667489+113529]
E       	GetHandleVerifier [0x0x7ff6b764e288+10616]
E       	BaseThreadInitThunk [0x0x7ffbe42ee8d7+23]
E       	RtlUserThreadStart [0x0x7ffbe5ebc34c+44]

..\..\..\..\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\selenium\webdriver\support\wait.py:146: TimeoutException</failure></testcase></testsuite></testsuites>